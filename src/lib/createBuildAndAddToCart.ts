import { supabase } from './supabase';
import { Product } from '../types/supabase';
import { v4 as uuidv4 } from 'uuid';

const DEFAULT_PC_BUILD_IMAGE =
  'https://c.dns-shop.kz/thumb/st4/fit/500/500/74b1d82cd8ea4b500778059a46043ad8/f5790e38bf4e4b06921b9b722706e72f5efad395c9ed5572c676250b98910f6c.jpg.webp';

export async function createBuildAndAddToCart(
  products: Product[],
  addItem: (item: any, quantity: number) => void
) {
  // –ü–æ–ª—É—á–∏—Ç—å user ID
  const {
    data: { user },
    error: userError,
  } = await supabase.auth.getUser();

  if (userError || !user) throw new Error('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');

  const component_ids = products.map(p => p.id);
  const buildId = uuidv4(); // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π ID –¥–ª—è –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π —Å–±–æ—Ä–∫–∏

  // –†–∞—Å—á—ë—Ç –æ–±—â–µ–π —Ü–µ–Ω—ã
  const totalPrice = products.reduce((sum, p) => sum + p.price, 0);

  // –í—Å—Ç–∞–≤–∫–∞ —Å–±–æ—Ä–∫–∏ –≤ —Ç–∞–±–ª–∏—Ü—É pc_builds
  const { error: insertError } = await supabase.from('pc_builds').insert([
    {
      id: buildId,
      user_id: user.id,
      component_ids,
    },
  ]);

  if (insertError) throw insertError;

  // üî• –û—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–π —Å–±–æ—Ä–∫–∏ –∏–∑ localStorage (–µ—Å–ª–∏ –æ–Ω–∞ –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ –∫–æ—Ä–∑–∏–Ω–µ)
  // –≠—Ç–æ —Ç–æ–ª—å–∫–æ –≤ —Ç–æ–º —Å–ª—É—á–∞–µ, –µ—Å–ª–∏ addItem –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ ID –∏ –Ω–µ –¥–æ–±–∞–≤–ª—è–µ—Ç –æ–¥–∏–Ω–∞–∫–æ–≤—ã–µ —Ç–æ–≤–∞—Ä—ã
  // –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞: –º–æ–∂–Ω–æ –ø—Ä–æ–≤–µ—Ä—è—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å —á–µ—Ä–µ–∑ uuid –∫–∞–∂–¥—ã–π —Ä–∞–∑ (–º—ã —É–∂–µ —ç—Ç–æ –¥–µ–ª–∞–µ–º)

  // ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ "–≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ —Ç–æ–≤–∞—Ä–∞-—Å–±–æ—Ä–∫–∏" –≤ –∫–æ—Ä–∑–∏–Ω—É
  addItem(
    {
      id: buildId, // ID —Å–±–æ—Ä–∫–∏
      name: '–°–±–æ—Ä–∫–∞ –ü–ö',
      price: totalPrice,
      image_url: DEFAULT_PC_BUILD_IMAGE,
      isBuild: true,
      buildId: buildId, // üí• –¥–æ–±–∞–≤—å —ç—Ç–æ
      components: products,
    },
    1
  );
}
